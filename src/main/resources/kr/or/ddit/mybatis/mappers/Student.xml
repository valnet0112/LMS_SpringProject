<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.student.dao.StudentDAO">

   <!-- 코드 프레그먼트 = 코드조각(동적쿼리로 쓰이는 where절을 sql태그를 통해 모듈화) -->
   <sql id="searchFrag">
         <where> <!-- 동적쿼리 : 아래의 조건문중 하나가 true일때 where절이 붙을지 안붙을지 결정됨-->
               <if test="@org.apache.commons.lang3.StringUtils@isNotBlank(simpleCondition.searchWord)">
                  <choose>
                     <!-- <when test="simpleCondition.searchType eq 'proName'">
                        INSTR(PRO_NAME, #{simpleCondition.searchWord}) > 0
                     </when> -->
                     <when test="simpleCondition.searchType eq 'subName'">
                        INSTR(S.SUB_NAME, #{simpleCondition.searchWord}) > 0
                     </when>
                     <when test="simpleCondition.searchType eq 'lecRoom'">
                        INSTR(L.LEC_ROOM, #{simpleCondition.searchWord}) > 0
                     </when>
                     <otherwise>   <!-- 전체 선택 -->
                        <!-- INSTR(PRO_NAME, #{simpleCondition.searchWord}) > 0
                        OR -->
                        INSTR(S.SUB_NAME, #{simpleCondition.searchWord}) > 0
                        OR
                        INSTR(L.LEC_ROOM, #{simpleCondition.searchWord}) > 0
                     </otherwise>
                  </choose>
               </if>
         </where>
      </sql>
   
   <select id="selectTotalRecord" parameterType="kr.or.ddit.common.paging.PaginationInfo" resultType="int">
      SELECT COUNT(*) 
      FROM LECTURE L LEFT OUTER JOIN SUBJECT S ON (L.SUB_CD = S.SUB_CD)
      <include refid="searchFrag"/>
   </select>

   <resultMap type="hashmap" id="classResultMap">
       <id property="rowNum" column="RNUM"/>
       <result property="proNo" column="PRO_NO"/>
       <result property="subCd" column="SUB_CD"/>
       <result property="lecDay" column="LEC_DAY"/>
       <result property="lecTime" column="LEC_TIME"/>
       <result property="lecRoom" column="LEC_ROOM"/>
       <result property="subName" column="SUB_NAME"/>
       <result property="subGubun" column="SUB_GUBUN"/>
       <result property="subCredit" column="SUB_CREDIT"/>
       <result property="proName" column="PRO_NAME"/>
   </resultMap>
   
   <select id="selectClassList" parameterType="kr.or.ddit.common.paging.PaginationInfo" resultMap="classResultMap">
      SELECT * 
      FROM (
          SELECT ROWNUM AS RNUM, C.PRO_NO, C.SUB_CD, C.LEC_DAY, C.LEC_TIME,
                    C.LEC_ROOM, C.SUB_NAME, C.SUB_GUBUN, C.SUB_CREDIT, P.PRO_NAME
          FROM (
              SELECT L.PRO_NO, L.SUB_CD, L.LEC_DAY, L.LEC_TIME, L.LEC_ROOM, S.SUB_NAME, S.SUB_GUBUN, S.SUB_CREDIT
              FROM LECTURE L LEFT OUTER JOIN SUBJECT S ON (L.SUB_CD = S.SUB_CD)
              <include refid="searchFrag"/>
          ) C LEFT OUTER JOIN PROFESSOR P ON (C.PRO_NO = P.PRO_NO)
      ) where rnum between #{startRow} and #{endRow}
   </select>

   <insert id="insertClass" parameterType="string" >
      INSERT INTO CLASS(
         STD_NO, SUB_CD, CLS_SCORE
      )VALUES(
         #{stdNo}, #{subCd}, 0
      )
   </insert>
   
   
   
   <resultMap type="hashmap" id="scoreResultMap">
       <id property="subCd" column="SUB_CD"/>
       <result property="stdNo" column="STD_NO"/>
       <result property="clsScore" column="CLS_SCORE"/>
       <result property="grade" column="GRADE"/>
   </resultMap>
   
   <select id="selectScoreList" parameterType="map" resultMap="scoreResultMap">
   SELECT *
   FROM
      (SELECT
           c.std_no,
           c.sub_cd,
            c.cls_score,
            h.grade
        FROM
            class c
        JOIN
            hakjum h ON c.cls_score BETWEEN h.min_point AND h.max_point
        WHERE 
           c.std_no = #{stdNo})
   </select>
   
</mapper>